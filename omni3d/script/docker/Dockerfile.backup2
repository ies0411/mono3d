FROM nvidia/cuda:11.1.1-devel-ubuntu20.04

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5 8.0 8.6+PTX" \
    TORCH_NVCC_FLAGS="-Xfatbin -compress-all" \
    CMAKE_PREFIX_PATH="$(dirname $(which conda))/../" \
    FORCE_CUDA="1"

ENV DEBIAN_FRONTEND=noninteractive

# RUN apt-get update && apt-get install -y \
#     git zip build-essential cmake python3-dev  python3-pip wget libgl1-mesa-glx libglib2.0-0 &&\
#     rm -rf /var/lib/apt/lists/*
# Get all dependencies
RUN apt-get update && apt-get install -y \
  git zip build-essential libssl-dev python3-dev python3-pip \
  locales curl gnupg2 lsb-release \
  cmake ninja-build wget ca-certificates ffmpeg libsm6 libxext6 x11-apps libgl1-mesa-dev \
  libgl1-mesa-glx libglib2.0-0 \
  xorg xrdp xserver-xorg mesa-utils xauth gdm3

RUN ln -sv /usr/bin/python3 /usr/bin/python
ENV PATH="/root/.local/bin:${PATH}"



RUN apt-get install -y bzip2
ENV CONDA_DIR /opt/conda
ENV PATH $CONDA_DIR/bin:$PATH
# Download and install Miniconda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh \
    && /bin/bash ~/miniconda.sh -b -p $CONDA_DIR \
    && rm ~/miniconda.sh \
    && $CONDA_DIR/bin/conda clean -a -y

# Update Conda to the latest version and set solver to classic
RUN conda update -n base -c defaults conda -y && conda config --set solver classic

RUN conda create -n myenv python=3.8 -y

RUN /bin/bash -c "source activate myenv \
    && conda install -c fvcore -c iopath -c pytorch3d -c conda-forge fvcore iopath pytorch3d -y"

# Install required packages
RUN /bin/bash -c "source activate myenv \
    && pip install torch==1.8.0+cu111 torchvision==0.9.0+cu111 torchaudio==0.8.0 -f https://download.pytorch.org/whl/torch_stable.html"


RUN /bin/bash -c "source activate myenv \
    && pip install cython opencv-python \
    && pip install 'git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI' \
    && python -m pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu111/torch1.8/index.html"


# pillow cython
# Set the entry point to use the Conda environment
RUN /bin/bash -c "source activate myenv \
    && conda install -c conda-forge scipy seaborn -y"

ENV PATH $CONDA_DIR/envs/myenv/bin:$PATH

# Ensure Python uses the Conda environment's Python
RUN echo "source activate myenv" >> ~/.bashrc

# pip install pillow==9.5
# conda install -c bottler nvidiacub



# apt-get install software-properties-common
# add-apt-repository ppa:ubuntu-toolchain-r/test
# apt-get update
# apt-get upgrade libstdc++6
# apt-get install gcc-4.9
